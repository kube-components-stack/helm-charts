# https://argo-cd.readthedocs.io/en/stable/operator-manual/declarative-setup/#projects
{{- $sourceRepos := list }}
{{- range $k, $v := .Values.apps }}
  {{- if $v.enabled }}
    {{- range $key, $values := $v.charts }}
      {{- $sourceRepos = append $sourceRepos .spec.source.repoURL }}
    {{- end }}
  {{- end }}
{{- end }}
---
apiVersion: argoproj.io/v1alpha1
kind: AppProject
metadata:
  name: {{ include "kube-components-stack.fullname" . }}
  annotations:
    helm.sh/hook-weight: "-1"
spec:
  clusterResourceWhitelist:
  - group: admissionregistration.k8s.io
    kind: MutatingWebhookConfiguration
  - group: admissionregistration.k8s.io
    kind: ValidatingWebhookConfiguration
  - group: apiextensions.k8s.io
    kind: CustomResourceDefinition
  - group: apiregistration.k8s.io
    kind: APIService
  - group: ""
    kind: Namespace
  - group: policy
    kind: PodSecurityPolicy
  - group: rbac.authorization.k8s.io
    kind: ClusterRole
  - group: rbac.authorization.k8s.io
    kind: ClusterRoleBinding
  - group: networking.k8s.io
    kind: IngressClass
{{- if .Values.apps.certificates.enabled }}
  - group: cert-manager.io
    kind: ClusterIssuer
{{- end }}
  destinations:
  - namespace: {{ .Release.Namespace }}
    server: {{ .Values.global.application.spec.destination.server }}
{{- if .Values.apps.certificates.enabled }}
  - namespace: kube-system
    server: {{ .Values.global.application.spec.destination.server }}
{{- end }}
{{- range $k, $v := .Values.apps }}
  {{- if $v.enabled }}
  - namespace: {{ $v.namespace }}
    server: {{ $.Values.global.application.spec.destination.server }}
  {{- end }}
{{- end }}
  sourceRepos:
  {{- range $sourceRepos | uniq }}
  - {{ . }}
  {{- end }}